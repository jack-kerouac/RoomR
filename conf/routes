# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# CRUD interface for DB operations
*		/crud									module:crud

# Import secure routes
*		/										module:secure



#######################################################################
# REST interface
#######################################################################

# login with email and password
POST	/rest/login								rest.Security.login
#	{
#		"email" : "alice@example.com",
#		"password" : "123"
#	}

# logout again
POST	/rest/logout							rest.Security.logout
# NO BODY

# list all users
GET		/rest/users								rest.RoomrUsers.list
# create a new user (i.e. register)
POST	/rest/users								rest.RoomrUsers.create
#	{
#		"name" : "Alice",
#		"email" : "alice@example.com",
#		"password" : "123",
#		"birthdate" : "1980-12-01T00:00:00.000+0100",
#		"gender" : "female"
#	}

# get details of the currently logged in user
GET		/rest/users/current						rest.RoomrUsers.getCurrent
# get details of an user
GET		/rest/users/{id}						rest.RoomrUsers.get
# get applications the given user has made
GET		/rest/users/{id}/applications			rest.RoomrUsers.getApplications


# list all room offers
GET		/rest/roomOffers						rest.RoomOffers.list
# get room offers by a search
GET		/rest/roomOffers/search					rest.RoomOffers.search
# get details of a room offer
GET		/rest/roomOffers/{id}					rest.RoomOffers.get
# get applications which were made for the given room offer
GET		/rest/roomOffers/{id}/applications		rest.RoomOffers.getApplications
# apply for a given room offer
POST	/rest/roomOffers/{id}/applications		rest.RoomOfferApplications.create
#	{
#		"message" : "Her mit dem Zimmer!"
#	}

# list all flatshares
GET		/rest/flatshares						rest.Flatshares.list
# create a new flatshare, including an optional room offer
POST	/rest/flatshares						rest.Flatshares.create
# {
# "address" : {
#	"street" : "Erika-Mann-Straße",
#	"streetNumber" : "63",
#	"zipCode" : "80636",
#	"city" : "München"
# },
# "floor" : "third",
# "geoLocation" : {
#	"latitude" : 48.137053,
#	"longitude" : 11.584969
# },
# "streetViewParameters" : {},
# "smokingTolerance" : "prohibited",
# "typeOfHouse" : "old",
# "numberOfRooms" : 3,
# "appliances" : ["dishWasher", "tv"],
# "additionalSpaces" : ["balcony", "garden"]
# "roomOffers" : [{
#	"roomDetails" : {
#		"totalRentPerMonthInEuro" : 200.0,
#		"depositInEuro" : 400.0,
#		"freeFrom" : "2012-10-01T00:00:00.000+0100",
#		"freeTo" : "2012-11-30T00:00:00.000+0100",
#		"roomSize" : {
#			"squareMeters" : 12.0
#		}
#	},
#	"criteria" : {
#		"minAge" : 18,
#		"maxAge" : 30,
#		"genders" : [male, female]
#	},
#	"description" : "Ein super Zimmer",
#	"contactEmail" : "bob@example.com"
# }]
# }


# update a flatshare and optionally a room offer
PUT		/rest/flatshares/{id}					rest.Flatshares.update
# get details of a flatshare
GET		/rest/flatshares/{id}					rest.Flatshares.get
# get room offers for the given flatshare
GET		/rest/flatshares/{id}/roomOffers		rest.Flatshares.getRoomOffers
# adds a new room offer to the existing flatshare
POST	/rest/flatshares/{id}/roomOffers		rest.Flatshares.addRoomOffer
# {
#	"roomDetails" : {
#		"totalRentPerMonthInEuro" : 200.0,
#		"depositInEuro" : 400.0,
#		"freeFrom" : "2012-10-01T00:00:00.000+0100",
#		"freeTo" : "2012-11-30T00:00:00.000+0100",
#		"roomSize" : {
#			"squareMeters" : 12.0
#		}
#	},
#	"criteria" : {
#		"minAge" : 18,
#		"maxAge" : 30,
#		"genders" : [male, female]
#	},
#	"description" : "Ein super Zimmer",
#	"contactEmail" : "bob@example.com"
# }



# get details about a single application
GET		/rest/applications/{id}					rest.RoomOfferApplications.get

POST	/rest/log								rest.RoomrLogger.log

POST	/rest/images							rest.Images.postImage
GET		/rest/images							rest.Images.list
GET		/rest/images/{id}						rest.Images.get
DELETE	/rest/images/{id}						rest.Images.delete

#######################################################################




# Home page
GET     /old                                       Start.start

# Ignore favicon requests
GET     /favicon.ico                            404

# Map static resources from the /app/public folder to the /public path
GET     /old/public/                                staticDir:public


# create room offers
GET		/old/createOffer							Offers.createOfferForm
POST	/old/offers/								Offers.createOffer

# edit room offers
GET		/old/editOffer								Offers.editOfferForm

GET		/old/offers/								Offers.viewAll
GET		/old/offers/{id}							Offers.viewOffer

# search
GET		/old/search									Search.searchForm
GET		/old/offers									Search.offers

# registration
GET		/old/register								Registration.registrationForm
POST	/old/users									Registration.register

# users
GET		/old/users									Users.viewAll


# applications
POST	/old/applications							Applications.apply

# dashboard
GET		/old/dashboard								Dashboard.view
GET		/old/applications							Applications.view


# DEV MODELS
GET		/old/reset									DevModels.reset


GET     /search/		                            staticDir:public/workshop
GET     /test/			                            staticDir:public/workshop
GET     /				                            staticDir:public/workshop

# Catch all
#*       /old/{controller}/{action}                  {controller}.{action}
