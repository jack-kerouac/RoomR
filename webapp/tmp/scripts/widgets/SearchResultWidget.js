// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['base/RoomrWidget'], function(RoomrWidget) {
    'use strict';

    var SearchResultWidget;
    return SearchResultWidget = (function(_super) {

      __extends(SearchResultWidget, _super);

      SearchResultWidget.prototype.nidus = void 0;

      SearchResultWidget.prototype.searchResults = [];

      function SearchResultWidget() {
        var _this = this;
        SearchResultWidget.__super__.constructor.call(this, 'searchResult');
        this.subscribeToEvent('searchResultsChanged', function(params) {
          return _this.searchResultsChanged(params);
        });
        this.registerEvent('drawRoute');
      }

      SearchResultWidget.prototype.installEventDelegator = function(element) {
        return $(".searchResultContainer").each(function(index, element) {
          var _this = this;
          return addEventListener('click', function(event) {
            var enclosingLi, target, targetName;
            event.preventDefault();
            target = event.explicitOriginalTarget;
            targetName = event.explicitOriginalTarget.name;
            if (targetName != null) {
              if (targetName === 'apply') {
                enclosingLi = $(target).closest('li');
                enclosingLi.addClass('rotated');
              }
              if (targetName === 'sendApply') {
                console.log("sending apply. Good luck...");
                alert("Not yet implemented. Sorry for that");
              }
              if (targetName === 'saveDraft') {
                console.log("saving text as draft...");
                alert("Not yet implemented. Sorry for that");
              }
              if (targetName === 'turnBack') {
                enclosingLi = $(target).closest('li');
                return enclosingLi.removeClass('rotated');
              }
            }
          });
        });
      };

      SearchResultWidget.prototype.renderInto = function(element) {
        var _this = this;
        this.nidus = $(element);
        this.renderTemplate({
          searchResults: this.searchResults
        }, function(content) {
          _this.nidus.html(content);
          return _this.installEventDelegator(content);
        });
        return $(document).ready(function() {
          var widget;
          widget = _this;
          return $('.DrawRouteButton').bind('click', function() {
            return widget.emit('drawRoute', $(this).data('index'));
          });
        });
      };

      SearchResultWidget.prototype.searchResultsChanged = function(searchResults) {
        this.searchResults = searchResults;
        return this.renderInto(this.nidus);
      };

      return SearchResultWidget;

    })(RoomrWidget);
  });

}).call(this);
